@mixin reset-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin reset-title {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin reset-description {
  margin: 0;
}

@mixin container {
  position: relative;
  margin: 0 auto;
  padding: 0 3rem;
  max-width: 123rem;

  @include tablet {
    padding: 0 1.5rem;
    max-width: 100%;
  }
}

@mixin visually-hidden {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  z-index: -1;
}

@mixin size($height, $width) {
  height: $height;
  width: $width;
}

@mixin font-size-height($fontSize, $lineHeight) {
  font-size: $fontSize;
  line-height: $lineHeight;
}

$mobile-width: 320px;
$tablet-width: 768px;
$desktop-width: 1024px;
$desktop-max-width: 4096px;

@mixin mobile {
  @media (max-width: #{$tablet-width}) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: #{$desktop-width}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width + 1}) {
    @content;
  }
}

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
  $f-min: strip-unit($f-min);
  $f-max: strip-unit($f-max);
  $w-min: strip-unit($w-min);
  $w-max: strip-unit($w-max);

  $k: ($f-max - $f-min)/($w-max - $w-min);
  $b: $f-min - $k * $w-min;

  $b: $b + $units;

  @return calc( #{$k} * 100vw + #{$b} );
}

@mixin fluidFontSize($f-min, $f-max, $w-min, $w-max, $fallback: false) {

  font-size: $f-min;

  @media (min-width: $w-min) {
    @if ($fallback) {
      font-size: $fallback;
    }
    font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);
  }
  @media (min-width: $w-max) {
    font-size: $f-max;
  }
}
